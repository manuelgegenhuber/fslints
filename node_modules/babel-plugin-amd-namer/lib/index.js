'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

exports.default = function (babel) {
  var t = babel.types;


  return {
    visitor: {
      CallExpression: function CallExpression(path, state) {
        if (isAnonymousDefineCall(path.node)) {
          var moduleName = state.file.getModuleName();

          if (typeof moduleName != 'string' || !moduleName.length) {
            state.file.log.error('Cannot get valid module name from `getModulename()`. Check your Babel options https://babeljs.io/docs/usage/api/#options. Perhaps you need to set `moduleIds` to true.');
            return;
          }

          path.node.arguments.unshift(t.stringLiteral(moduleName));
        }
      }
    }
  };

  function isAnonymousDefineCall(node) {
    if (node.callee.name != DEFINE) {
      return false;
    }

    if (!node.arguments.length) {
      return false;
    }

    var firstArg = node.arguments[0];
    return !t.isStringLiteral(firstArg);
  }
};

var DEFINE = 'define';